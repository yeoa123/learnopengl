#version 460 core
layout(local_size_x = 1, local_size_y = 1) in;
layout(rgba32f, binding = 0) uniform image2D img_output;
layout(rgba32f, binding = 1) uniform image2D img_output_buffer;

void gauss_blur ()
{
	ivec2[] edges = 
	{
		ivec2(-1,  0),
		ivec2( 1,  0),
		ivec2( 0, -1),
		ivec2( 0,  1)
	};

	ivec2[] corners = 
	{
		ivec2(-1, -1),
		ivec2( 1, -1),
		ivec2(-1,  1),
		ivec2( 1,  1)
	};


	// get the index in the global work group (= x,y position)
	ivec2 xy = ivec2(gl_GlobalInvocationID.xy);

	// initialize color with middle point, loop over edges, loop over corners
	vec4 color = imageLoad(img_output_buffer, xy) / 4;
	for (int i = 0; i < 4; i++)
	{
		color += imageLoad(img_output_buffer, xy + edges[i]) / 8;
	}
	for (int i = 0; i < 4; i++)
	{
		color += imageLoad(img_output_buffer, xy + corners[i]) / 16;
	}
	vec4 pixel = vec4(color.rgb, 1.0);
	imageStore(img_output, xy, pixel);
}

void nothing ()
{
	ivec2 xy = ivec2(gl_GlobalInvocationID.xy);
	vec4 pixel = imageLoad(img_output_buffer, xy);
	imageStore(img_output, xy, pixel);
}

void main ()
{
	gauss_blur();
};